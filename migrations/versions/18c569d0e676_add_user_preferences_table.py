"""Add user preferences table

Revision ID: 18c569d0e676
Revises: 
Create Date: 2025-03-22 19:27:57.238451

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '18c569d0e676'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=64), nullable=False),
    sa.Column('value', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'key')
    )
    op.drop_table('check_in_bak')
    op.drop_table('user_bak')
    with op.batch_alter_table('friend_relationships', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.drop_index('idx_friend_rel_addressee')
        batch_op.drop_index('idx_friend_rel_requester')
        batch_op.create_unique_constraint('uq_friend_relationship', ['requester_id', 'addressee_id'])

    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.drop_column('is_public')

    with op.batch_alter_table('project_invitations', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.drop_index('idx_proj_inv_invitee')
        batch_op.drop_index('idx_proj_inv_project')
        batch_op.create_unique_constraint('uq_project_invitation', ['project_id', 'invitee_id'])

    with op.batch_alter_table('project_join_requests', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.drop_index('idx_proj_req_project')
        batch_op.drop_index('idx_proj_req_user')
        batch_op.create_unique_constraint('uq_project_join_request', ['project_id', 'user_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('project_join_requests', schema=None) as batch_op:
        batch_op.drop_constraint('uq_project_join_request', type_='unique')
        batch_op.create_index('idx_proj_req_user', ['user_id'], unique=False)
        batch_op.create_index('idx_proj_req_project', ['project_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('project_invitations', schema=None) as batch_op:
        batch_op.drop_constraint('uq_project_invitation', type_='unique')
        batch_op.create_index('idx_proj_inv_project', ['project_id'], unique=False)
        batch_op.create_index('idx_proj_inv_invitee', ['invitee_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_public', sa.BOOLEAN(), nullable=True))

    with op.batch_alter_table('friend_relationships', schema=None) as batch_op:
        batch_op.drop_constraint('uq_friend_relationship', type_='unique')
        batch_op.create_index('idx_friend_rel_requester', ['requester_id'], unique=False)
        batch_op.create_index('idx_friend_rel_addressee', ['addressee_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    op.create_table('user_bak',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=128), nullable=False),
    sa.Column('date_registered', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('check_in_bak',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('check_date', sa.DATE(), nullable=False),
    sa.Column('check_time', sa.DATETIME(), nullable=False),
    sa.Column('note', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_bak.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('user_preferences')
    # ### end Alembic commands ###
